# right click on folder, launch terminal
# macqiime

# Validate mapping file
validate_mapping_file.py -b -m mapping_file.txt
# -->  autocorrect for the naming rules; use the corrected file

#assign names based on the mapping file
#Read 1
split_libraries_fastq.py -i 4541-P1_S1_L001_R1_001.fastq.gz -o BGM_R1 -m R1_Eudora_BGM_MappingFile.txt -b 4541-P1_S1_L001_I1_001.fastq.gz -q 19 --rev_comp_mapping_barcodes --barcode_type 10 --store_qual_scores --store_demultiplexed_fastq
#Read 2
split_libraries_fastq.py -i 4541-P1_S1_L001_R2_001.fastq.gz -o BGM_R2 -m R2_Eudora_BGM_MappingFile.txt -b 4541-P1_S1_L001_I1_001.fastq.gz -q 19 --rev_comp_mapping_barcodes --barcode_type 10 --store_qual_scores --store_demultiplexed_fastq

#unzip files
gunzip	*R1_001.fastq.gz
gunzip	*R2_001.fastq.gz
gunzip	*I1_001.fastq.gz

#check quality
fastqc seqs.fastq 

# Trimm linker primer sequence and generate a new file with trimmed sequences from fastq files using cutadapt
# R1
cutadapt -g TTCTTGGTCATTTAGAGGAAGTAA -e 0.1 --discard-untrimmed --match-read-wildcards seqs.fastq > R1seqs.trimmed1.fastq
# R2
cutadapt -g AATCCTCCGCTTATTGATATGC -e 0.1 --discard-untrimmed --match-read-wildcards seqs.fastq > R2seqs.trimmed1.fastq

# Trimm ITS primer sequence and generate a new file with trimmed sequences from fastq files using cutadapt (number of trimmed sequences should be larger)
# R1 (ITS1F)
cutadapt -g CTTGGTCATTTAGAGGAAGTAA -e 0.1 --discard-untrimmed --match-read-wildcards R1seqs.trimmed1.fastq > R1seqs.trimmed2.fastq
# R2 (ITS4)
cutadapt -g TCCTCCGCTTATTGATATGC -e 0.1 --discard-untrimmed --match-read-wildcards R2seqs.trimmed1.fastq > R2seqs.trimmed2.fastq

# quality filter
# R1
fastq_quality_filter -i R1seqs.trimmed2.fastq -q 20 -p 90 | fastq_to_fasta > R1seqs.trimmed2.fasta
# R2
fastq_quality_filter -i R2seqs.trimmed2.fastq -q 20 -p 90 | fastq_to_fasta > R2seqs.trimmed2.fasta

# check number
grep -c ">" R1seqs.trimmed2.fasta

#identify chimeric seqs (need to use usearch?) & filter_fasta.py
identify_chimeric_seqs.py -i R1seqs.trimmed2.fasta -m usearch61 -r ~/sh_refs_qiime_ver7_dynamic_01.12.2017.fasta

#remove chimeric sequences based on the text file generated by the last step
filter_fasta.py -s usearch61_chimeras/chimeras.txt -f R1seqs.trimmed2.fasta -o R1seqs.trimmed2_no_chimeras.fasta -n

#pick otus
pick_otus.py -s 0.95 -i R1seqs.trimmed2_no_chimeras.fasta -m usearch61 --optimal --minsize 2

#pick representative set
pick_rep_set.py -f R1seqs.trimmed2_no_chimeras.fasta -i usearch61_picked_otus/R1seqs.trimmed2_no_chimeras_otus.txt -m longest

#assign taxonomy
assign_taxonomy.py -i R1seqs.trimmed2_no_chimeras.fasta_rep_set.fasta -m blast -t ~/sh_taxonomy_qiime_ver7_dynamic_01.12.2017.txt -r ~/sh_refs_qiime_ver7_dynamic_01.12.2017.fasta -o taxonomy_blast


#make otu table
make_otu_table.py -i usearch61_picked_otus/R1seqs.trimmed2_no_chimeras_otus.txt -t taxonomy_blast/R1seqs.trimmed2_no_chimeras.fasta_rep_set_tax_assignments.txt -m Eudora_BGM_MappingFile_corrected.txt -o otu_table.biom
                 

#summarize taxa through plots
summarize_taxa_through_plots.py -i otu_table.biom -o BGM_taxa_summary -m Eudora_BGM_MappingFile_corrected.txt

filter_taxa_from_otu_table.py -i otu_table.biom -o otu_table_fungi.biom -p k__Fungi 